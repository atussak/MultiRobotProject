;; Auto-generated. Do not edit!


(when (boundp 'server_test::servertestResult)
  (if (not (find-package "SERVER_TEST"))
    (make-package "SERVER_TEST"))
  (shadow 'servertestResult (find-package "SERVER_TEST")))
(unless (find-package "SERVER_TEST::SERVERTESTRESULT")
  (make-package "SERVER_TEST::SERVERTESTRESULT"))

(in-package "ROS")
;;//! \htmlinclude servertestResult.msg.html


(defclass server_test::servertestResult
  :super ros::object
  :slots (_sequence ))

(defmethod server_test::servertestResult
  (:init
   (&key
    ((:sequence __sequence) (make-array 0 :initial-element 0 :element-type :integer))
    )
   (send-super :init)
   (setq _sequence __sequence)
   self)
  (:sequence
   (&optional __sequence)
   (if __sequence (setq _sequence __sequence)) _sequence)
  (:serialization-length
   ()
   (+
    ;; int32[] _sequence
    (* 4    (length _sequence)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32[] _sequence
     (write-long (length _sequence) s)
     (dotimes (i (length _sequence))
       (write-long (elt _sequence i) s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32[] _sequence
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _sequence (instantiate integer-vector n))
     (dotimes (i n)
     (setf (elt _sequence i) (sys::peek buf ptr- :integer)) (incf ptr- 4)
     ))
   ;;
   self)
  )

(setf (get server_test::servertestResult :md5sum-) "b81e37d2a31925a0e8ae261a8699cb79")
(setf (get server_test::servertestResult :datatype-) "server_test/servertestResult")
(setf (get server_test::servertestResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
int32[] sequence

")



(provide :server_test/servertestResult "b81e37d2a31925a0e8ae261a8699cb79")


